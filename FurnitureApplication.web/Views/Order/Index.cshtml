@model OrdersViewModel
@{
    ViewBag.Title = "Orders";
}
<div id="main">
    <div class="main-holder">
        <div class="container" style="margin-top: 130px; margin-bottom: 30px;">
            <div class="heading-area">
                <h2>Orders</h2>
            </div>
            <div id="tableContainer">
                <div class="col-lg-6 float-left mb-3">
                    <div class="search-box create-page">
                        <div class="search-row">
                            <input class="form-control" name="UserID" id="searchTxt" type="text" value="@Model.UserID" placeholder="Search" />
                            <span onclick="action" id="searchBtn" class="ico-search10"></span>
                        </div>
                    </div>
                </div>
                <div>
                    <table class="table table-hover" id="OrdersTable">
                        <thead>
                            <tr>
                                <th scope="col">User ID</th>
                                <th scope="col">Status</th>
                                <th scope="col">Total Price</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Orders != null && Model.Orders.Count > 0)
                            {
                                foreach (var order in Model.Orders)
                                {
                                    <tr>
                                        <td>@order.UserID</td>
                                        <td>@order.status</td>
                                        <td>@order.TotalAmount</td>
                                        <td>
                                            <a href="@Url.Action("Details", "Order", new { ID = order.ID } )" class="btn btn-primary detailsBtn" data-id="@order.ID">Details</a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td class="text-center text-danger" colspan="5">No Orders found</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div>
                        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
                        {
                            if (Model.Pager.CurrentPage > 1)
                            {
                                <a href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = 1 } )" class="pageButtons" data-pageno="1">First</a>
                                <a href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = Model.Pager.CurrentPage - 1 } )" class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</a>}

                            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                            {
                                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                                <a href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = page } )" class="@activeClass pageButtons" data-pageno="@page">@page</a>}

                            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                            {
                                <a href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = Model.Pager.CurrentPage + 1 } )"  class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</a>
                                <a href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = Model.Pager.EndPage } )" class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</a>}
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


